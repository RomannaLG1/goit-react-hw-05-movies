{"version":3,"file":"static/js/751.2c7158f5.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.jsx","Pages/Home.js","Pages/Home.styled.js","api-service.js"],"sourcesContent":["import { PaginationItem } from '@mui/material';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nexport const BasicPagination = ({ count, page, onChange, navLink }) => {\n  return (\n    <Stack spacing={3}>\n      <Pagination\n        sx={{ marginX: 'auto' }}\n        showFirstButton\n        showLastButton\n        count={count}\n        page={page}\n        onChange={onChange}\n        renderItem={item => (\n          <PaginationItem\n            component={navLink}\n            to={`/?page=${item.page}`}\n            {...item}\n          />\n        )}\n      />\n    </Stack>\n  );\n};\n","import { NavLink, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from '../api-service';\nimport { Item, List, Image } from './Home.styled';\nimport { Loader } from '../components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport { BasicPagination } from 'components/Pagination/Pagination';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // const [page, setPage] = useState(parseInt(props.location.search?.split('=')[1] || 1));\n  const [page, setPage] = useState(1);\n  const [pageQty, setPageQty] = useState(0);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async page => {\n      try {\n        setIsLoading(true);\n        const movies = await API.fetchPopularMovies(page);\n        console.log(movies);\n        setMovies(movies.results);\n        setPageQty(movies.total_pages);\n        if(movies.total_pages < page) {\n          setPage(1);\n        }\n\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    fetchMovies(page);\n    // console.log(pageQty);\n  }, [page, pageQty]);\n\n  return (\n    <main>\n      {error && toast.error('Something wrong...Try again')}\n      {isLoading && <Loader />}\n      {movies && (\n        <List>\n          {movies.map(({ poster_path, title, id }) => (\n            <Item key={id}>\n              <NavLink to={`movies/${id}`} state={{ from: location }}>\n                {' '}\n                <Image\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={title}\n                />{' '}\n                <h3>{title}</h3>\n              </NavLink>\n            </Item>\n          ))}\n        </List>\n      )}\n      {pageQty > 0 && (\n        <BasicPagination\n          count={pageQty}\n          page={page}\n          onChange={(_, num) => setPage(num)}\n          navLink={NavLink}\n        />\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\n\nexport const List = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  display: grid;\n  padding: 60px 0;\n    grid-template-columns: repeat(3, 395px);\n    gap: 32px 16px;\n`;\n\nexport const Item = styled.li`\njustify-self: center;\n`;\n\nexport const Image = styled.img`\n width: 395px;\n      height: 574px;\n      object-fit: cover;\n`","import axios from 'axios';\n// const API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export async function fetchPopularMovies(page) {\n//   const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n//   const response = await axios(url);\n//   return response.data.results;\n// }\n\nconst API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  // page: 1,\n  \n};\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\n// export const fetchPopularMovies = async (page) => {\n//   const { data } = await axios.get(`/trending/movie/week?page=${page}`);\n//   return data.results;\n// };\n\n\nexport const fetchPopularMovies = async (page) => {\n  const {data} = await axios.get(`/trending/movie/week?page=${page}`);\n  return data;\n};\nexport const fetchMovieToSearch = async (searchQuery, page) => {\n  const { data } = await axios.get(\n    `/search/movie?&query=${searchQuery}&page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?`);\n  // console.log(data);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`);\n  // console.log(data.cast);\n  return data.cast;\n};\n\n// fetchCast(76600);\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`);\n  // console.log(data.results);\n  return data.results;\n};\n\n// fetchReviews(76600);"],"names":["BasicPagination","count","page","onChange","navLink","Stack","spacing","Pagination","sx","marginX","showFirstButton","showLastButton","renderItem","item","PaginationItem","component","to","useState","movies","setMovies","isLoading","setIsLoading","error","setError","setPage","pageQty","setPageQty","location","useLocation","useEffect","fetchMovies","API","console","log","results","total_pages","message","toast","Loader","map","poster_path","title","id","state","from","src","alt","_","num","NavLink","List","styled","Item","Image","axios","api_key","language","fetchPopularMovies","data","fetchMovieToSearch","searchQuery","fetchMovieById","fetchCast","cast","fetchReviews"],"sourceRoot":""}