{"version":3,"file":"static/js/806.a0edec38.chunk.js","mappings":"kTAWAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,QACVC,KAAM,GAID,IAAMC,EAAkB,mCAAG,sGACTJ,EAAAA,EAAAA,IAAA,yBADS,uBACxBK,EADwB,EACxBA,KADwB,kBAEzBA,EAAKC,SAFoB,2CAAH,qDAKlBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTR,EAAAA,EAAAA,IAAA,+BACGQ,IAFM,uBACxBH,EADwB,EACxBA,KADwB,kBAIzBA,EAAKC,SAJoB,2CAAH,sDAOlBG,EAAc,mCAAG,WAAMC,GAAN,yFACLV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,MADK,uBACpBL,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdM,EAAS,mCAAG,WAAMD,GAAN,yFACAV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,cADA,uBACfL,EADe,EACfA,KADe,kBAGhBA,EAAKO,MAHW,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,yFACHV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,cADG,uBAClBL,EADkB,EAClBA,KADkB,kBAGnBA,EAAKC,SAHc,2CAAH,qD,8CC1CnBQ,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CAAcC,EAAAA,GAAOC,EAAAA,GAAQC,EAAAA,GAAOC,EAAAA,GAAQC,EAAAA,GAASC,EAAAA,IAGjE,K,0LCJaC,EAAOP,EAAAA,GAAAA,GAAH,wDAKJQ,EAAQR,EAAAA,GAAAA,EAAH,yFAMLS,EAAOT,EAAAA,GAAAA,EAAH,4C,SC6BjB,EAnCgB,WACd,IAAQU,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,WAAMrB,GAAN,gGAEDsB,EAAAA,GAAiBtB,GAFhB,OAGA,KADhBuB,EAFgB,QAGXC,SACVC,EAAAA,EAAAA,IAAM,8BAEPN,EAAWI,GANW,gDAQtBG,QAAQC,IAAI,SARU,yDAAH,sDAWvBN,EAAkBN,EACnB,GAAE,CAACA,KAGF,SAACX,EAAA,EAAD,CAAKwB,GAAG,UAAR,UACE,SAAChB,EAAD,UACGM,EAAQW,KAAI,YAA8B,IAA3B7B,EAA0B,EAA1BA,GAAI8B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,SAAClB,EAAD,UAAQiB,KACR,SAAChB,EAAD,UAAOiB,MAFA/B,EAKZ,OAIR,C","sources":["api-service.js","components/Box.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import axios from 'axios';\n// const API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export async function fetchPopularMovies(page) {\n//   const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n//   const response = await axios(url);\n//   return response.data.results;\n// }\n\nconst API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  page: 1,\n  \n};\n\nexport const fetchPopularMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/week?`);\n  return data.results;\n};\n\nexport const fetchMovieToSearch = async searchQuery => {\n  const { data } = await axios.get(\n    `/search/movie?&query=${searchQuery}`\n  );\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?`);\n  // console.log(data);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`);\n  // console.log(data.cast);\n  return data.cast;\n};\n\n// fetchCast(76600);\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`);\n  // console.log(data.results);\n  return data.results;\n};\n\n// fetchReviews(76600);","import styled from 'styled-components'\nimport { color, space, layout, border, flexbox, grid } from 'styled-system'\n\nconst Box = styled('div')(color, border, space, layout, flexbox, grid);\n\n\nexport default Box;","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  gap: 20px;\n`;\n\nexport const Title = styled.p`\n  font-size: 18px;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from '../../api-service';\nimport Box from 'components/Box';\nimport { toast } from 'react-toastify';\nimport { List, Title, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async id => {\n      try {\n        const review = await API.fetchReviews(id);\n        if (review.length === 0) {\n         toast(\"We don't found any reviews\");\n       }\n        setReviews(review);\n      } catch (error) {\n        console.log('error');\n      }\n    };\n    fetchMovieReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <Box as=\"section\">\n      <List>\n        {reviews.map(({ id, author, content }) => {\n          return (\n            <li key={id}>\n              <Title>{author}</Title>\n              <Text>{content}</Text>\n            </li>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","language","page","fetchPopularMovies","data","results","fetchMovieToSearch","searchQuery","fetchMovieById","id","fetchCast","cast","fetchReviews","Box","styled","color","border","space","layout","flexbox","grid","List","Title","Text","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","API","review","length","toast","console","log","as","map","author","content"],"sourceRoot":""}