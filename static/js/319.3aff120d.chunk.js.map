{"version":3,"file":"static/js/319.3aff120d.chunk.js","mappings":"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","sources":["Pages/Home.styled.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","components/Pagination/PaginationSearch.jsx","Pages/Movies.js","api-service.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const List = styled.ul`\n  /* margin-left: auto;\n  margin-right: auto;\n  display: grid;\n  padding: 60px 0;\n    grid-template-columns: repeat(3, 395px);\n    gap: 32px 16px; */\n`;\n\nexport const Item = styled.li`\njustify-self: center;\n`;\n\nexport const Image = styled.img`\n width: 395px;\n      height: 574px;\n      object-fit: cover;\n`\n\nexport const Wrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  display: grid;\n  padding: 60px 0;\n    grid-template-columns: repeat(3, 395px);\n    gap: 32px 16px;\n`","import styled from \"styled-components\";\n\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  width: 300px;\n  border-radius: 4px;\n  font: inherit;\n`;\nexport const Button = styled.button`\nwidth: 50px;\npadding: 5px;\nbackground-color: transparent;\nborder: none;\ncursor: pointer;\nposition: absolute;\nright: 1px;\n`\n","import { useState } from 'react';\nimport {Wrapper, Input, Button } from './SearchBox.styled';\nimport { HiSearch } from \"react-icons/hi\";\nexport const SearchBox = ({ onSubmit }) => {\n\n  const [searchQuery, setSearchQuery] = useState('');\n \n\n  const handleSubmit = e => {\n    e.preventDefault();\n   onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  const handleInput = evt => {\n    setSearchQuery(evt.currentTarget.value.trim());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Wrapper>\n \n           <Input\n        placeholder=\"Enter movie...\"\n        type=\"text\"\n        name=\"searchQuery\"\n        value={searchQuery}\n        onChange={handleInput}\n        required\n        autoFocus\n      />\n            <Button>\n        <HiSearch size=\"25\" />\n      </Button> \n      </Wrapper>\n   \n    </form>\n  );\n};\n","import { PaginationItem } from '@mui/material';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nexport const BasicPagination = ({ count, page, onChange, navLink, query }) => {\n  return (\n    <Stack spacing={3}>\n      <Pagination\n        sx={{ marginX: 'auto' }}\n        showFirstButton\n        showLastButton\n        count={count}\n        page={page}\n        onChange={onChange}\n        renderItem={item => (\n          <PaginationItem\n            component={navLink}\n            to={`/movies/?query=${query}&page=${item.page}`}\n            {...item}\n          />\n        )}\n      />\n    </Stack>\n  );\n};\n","import * as API from '../api-service';\nimport { useState, useEffect, useRef } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Item, List, Image, Wrapper } from './Home.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from '../components/SearchBox/SearchBox';\nimport { Loader } from '../components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport defaultImg from '../components/image/defaultImg.png';\nimport { BasicPagination } from 'components/Pagination/PaginationSearch';\n\nconst Movies = (props) => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [page, setPage] = useState(1);\n  const [pageQty, setPageQty] = useState(0);\n  const movieQuery = searchParams.get('query');\n  // const moviePage = searchParams.get('page');\n  const location = useLocation();\n  const ref = useRef (null);\n  useEffect(() => {\n    ref.current.scrollIntoView({ behavior: 'smooth' });\n  }, [page, movieQuery]);\n\n  useEffect(() => {\n    if (!movieQuery) {\n      return;\n    }\n\n    const fetchMovies = async (searchQuery, page) => {\n      try {\n        setIsLoading(true);\n        const movies = await API.fetchMovieToSearch(searchQuery, page);\n        if (movies.length === 0) {\n          toast(\"We don't found any films\");\n        }\n        setMovies(movies.results);\n        setPageQty(movies.total_pages);\n        if(movies.total_pages < page) {\n          setPage(1);\n        }\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    fetchMovies(movieQuery, page);\n  }, [movieQuery, page]);\n\n  const handleSubmit = (query='', page=1) => {\n\n    if (!query ) {\n      console.log('enter value');\n      return;\n    }\n\n    console.log('query', query);\n    // setSearchParams((query !== '' ? { query } : {}) || (page !== 1 ? { page } : 1));\n    setSearchParams(`query=${query}&page=${page}`)\n   \n    setMovies([]);\n    \n  };\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleSubmit} />\n      {error && toast.error('Something wrong...Try again')}\n      {isLoading && <Loader />}\n      {movies && (\n        <List>\n          <Wrapper ref={ref}> \n          {movies.map(({ poster_path, title, id }) => (\n            <Item key={id}>\n              <NavLink to={`${id}`} state={{ from: location }}>\n                {' '}\n                <Image\n                 src={poster_path? `https://image.tmdb.org/t/p/w500${poster_path}` : defaultImg}\n                  alt={title}\n                />{' '}\n                <h3>{title}</h3>\n              </NavLink>\n            </Item>\n          ))}\n          </Wrapper>\n        </List>\n\n      )}\n         {pageQty > 0 && (\n        <BasicPagination\n          count={pageQty}\n          page={page}\n          onChange={(_, num) => setPage(num)}\n          navLink={NavLink}\n          query={movieQuery}\n        />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n// const API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export async function fetchPopularMovies(page) {\n//   const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n//   const response = await axios(url);\n//   return response.data.results;\n// }\n\nconst API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  // page: 1,\n  \n};\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\n// export const fetchPopularMovies = async (page) => {\n//   const { data } = await axios.get(`/trending/movie/week?page=${page}`);\n//   return data.results;\n// };\n\n\nexport const fetchPopularMovies = async (page) => {\n  const {data} = await axios.get(`/trending/movie/week?page=${page}`);\n  return data;\n};\nexport const fetchMovieToSearch = async (searchQuery, page) => {\n  const { data } = await axios.get(\n    `/search/movie?&query=${searchQuery}&page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?`);\n  // console.log(data);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`);\n  // console.log(data.cast);\n  return data.cast;\n};\n\n// fetchCast(76600);\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`);\n  // console.log(data.results);\n  return data.results;\n};\n\n// fetchReviews(76600);"],"names":["List","styled","Item","Image","Wrapper","Input","Button","SearchBox","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","placeholder","type","name","value","onChange","evt","currentTarget","trim","required","autoFocus","size","BasicPagination","count","page","navLink","query","Stack","spacing","Pagination","sx","marginX","showFirstButton","showLastButton","renderItem","item","PaginationItem","component","to","props","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","setPage","pageQty","setPageQty","movieQuery","get","location","useLocation","ref","useRef","useEffect","current","scrollIntoView","behavior","fetchMovies","API","length","toast","results","total_pages","console","log","message","Loader","map","poster_path","title","id","state","from","src","defaultImg","alt","_","num","NavLink","axios","api_key","language","fetchPopularMovies","data","fetchMovieToSearch","fetchMovieById","fetchCast","cast","fetchReviews"],"sourceRoot":""}