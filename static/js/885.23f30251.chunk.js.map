{"version":3,"file":"static/js/885.23f30251.chunk.js","mappings":"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","sources":["Pages/Home.styled.js","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.js","Pages/Movies.js","api-service.js"],"sourcesContent":["import styled from \"styled-components\";\n\n\nexport const List = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  display: grid;\n  padding: 60px 0;\n    grid-template-columns: repeat(3, 395px);\n    gap: 32px 16px;\n`;\n\nexport const Item = styled.li`\njustify-self: center;\n`;\n\nexport const Image = styled.img`\n width: 395px;\n      height: 574px;\n      object-fit: cover;\n`","import styled from \"styled-components\";\n\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  width: 300px;\n  border-radius: 4px;\n  font: inherit;\n`;\nexport const Button = styled.button`\nwidth: 50px;\npadding: 5px;\nbackground-color: transparent;\nborder: none;\ncursor: pointer;\nposition: absolute;\nright: 1px;\n`\n","import { useState } from 'react';\nimport {Wrapper, Input, Button } from './SearchBox.styled';\nimport { HiSearch } from \"react-icons/hi\";\nexport const SearchBox = ({ onSubmit }) => {\n\n  const [searchQuery, setSearchQuery] = useState('');\n \n\n  const handleSubmit = e => {\n    e.preventDefault();\n   onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  const handleInput = evt => {\n    setSearchQuery(evt.currentTarget.value.trim());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Wrapper>\n \n           <Input\n        placeholder=\"Enter movie...\"\n        type=\"text\"\n        name=\"searchQuery\"\n        value={searchQuery}\n        onChange={handleInput}\n        required\n        autoFocus\n      />\n            <Button>\n        <HiSearch size=\"25\" />\n      </Button> \n      </Wrapper>\n   \n    </form>\n  );\n};\n","import * as API from '../api-service';\nimport { useState, useEffect } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { Item, List, Image } from './Home.styled';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from '../components/SearchBox/SearchBox';\nimport { Loader } from '../components/Loader/Loader';\nimport { toast } from 'react-toastify';\nimport defaultImg from '../components/image/defaultImg.png';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieQuery = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieQuery) {\n      return;\n    }\n\n    const fetchMovies = async searchQuery => {\n      try {\n        setIsLoading(true);\n        const movies = await API.fetchMovieToSearch(searchQuery);\n        if (movies.length === 0) {\n          toast(\"We don't found any films\");\n        }\n        setMovies(movies);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    fetchMovies(movieQuery);\n  }, [movieQuery]);\n\n  const handleSubmit = query => {\n    if (!query) {\n      console.log('enter value');\n      return;\n    }\n    setSearchParams(query !== '' ? { query } : {});\n    setMovies([]);\n  };\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleSubmit} />\n      {error && toast.error('Something wrong...Try again')}\n      {isLoading && <Loader />}\n      {movies && (\n        <List>\n          {movies.map(({ poster_path, title, id }) => (\n            <Item key={id}>\n              <NavLink to={`${id}`} state={{ from: location }}>\n                {' '}\n                <Image\n                 src={poster_path? `https://image.tmdb.org/t/p/w500${poster_path}` : defaultImg}\n                  alt={title}\n                />{' '}\n                <h3>{title}</h3>\n              </NavLink>\n            </Item>\n          ))}\n        </List>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n// const API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export async function fetchPopularMovies(page) {\n//   const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n//   const response = await axios(url);\n//   return response.data.results;\n// }\n\nconst API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  page: 1,\n  \n};\n\nexport const fetchPopularMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/week?`);\n  return data.results;\n};\n\nexport const fetchMovieToSearch = async searchQuery => {\n  const { data } = await axios.get(\n    `/search/movie?&query=${searchQuery}`\n  );\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?`);\n  // console.log(data);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`);\n  // console.log(data.cast);\n  return data.cast;\n};\n\n// fetchCast(76600);\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`);\n  // console.log(data.results);\n  return data.results;\n};\n\n// fetchReviews(76600);"],"names":["List","styled","Item","Image","Wrapper","Input","Button","SearchBox","onSubmit","useState","searchQuery","setSearchQuery","e","preventDefault","placeholder","type","name","value","onChange","evt","currentTarget","trim","required","autoFocus","size","movies","setMovies","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","movieQuery","get","location","useLocation","useEffect","fetchMovies","API","length","toast","console","log","message","query","Loader","map","poster_path","title","id","to","state","from","src","defaultImg","alt","axios","api_key","language","page","fetchPopularMovies","data","results","fetchMovieToSearch","fetchMovieById","fetchCast","cast","fetchReviews"],"sourceRoot":""}