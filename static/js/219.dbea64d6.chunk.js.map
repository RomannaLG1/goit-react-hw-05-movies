{"version":3,"file":"static/js/219.dbea64d6.chunk.js","mappings":"kTAWAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAeL,IAAMC,EAAkB,mCAAG,WAAOC,GAAP,yFACXJ,EAAAA,EAAAA,IAAA,oCAAuCI,IAD5B,uBACzBC,EADyB,EACzBA,KADyB,kBAEzBA,GAFyB,2CAAH,sDAIlBC,EAAkB,mCAAG,WAAOC,EAAaH,GAApB,yFACTJ,EAAAA,EAAAA,IAAA,+BACGO,EADH,iBACuBH,IAFd,uBACxBC,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,wDAOlBG,EAAc,mCAAG,WAAMC,GAAN,yFACLT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,MADK,uBACpBJ,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdK,EAAS,mCAAG,WAAMD,GAAN,yFACAT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,cADA,uBACfJ,EADe,EACfA,KADe,kBAGhBA,EAAKM,MAHW,2CAAH,sDAOTC,EAAY,mCAAG,WAAMH,GAAN,yFACHT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,cADG,uBAClBJ,EADkB,EAClBA,KADkB,kBAGnBA,EAAKQ,SAHc,2CAAH,qD,8CCnDnBC,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CAAcC,EAAAA,GAAOC,EAAAA,GAAQC,EAAAA,GAAOC,EAAAA,GAAQC,EAAAA,GAASC,EAAAA,IAGjE,K,kLCHaC,EAAOP,EAAAA,GAAAA,GAAH,yKASJQ,EAAOR,EAAAA,GAAAA,GAAH,+CAIJS,EAAQT,EAAAA,GAAAA,IAAH,wFAMLU,EAAOV,EAAAA,GAAAA,EAAH,0C,6BC2BjB,EAzCa,WACX,IAAQW,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOjB,EAAP,KAAakB,EAAb,KAkBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,WAAMtB,GAAN,gGAECuB,EAAAA,EAAcvB,GAFf,OAGE,KADfwB,EAFa,QAGTC,SACRC,EAAAA,EAAAA,IAAM,2BAERN,EAAQI,GANW,gDAQnBG,QAAQC,IAAI,SARO,yDAAH,sDAWpBN,EAAeL,EAChB,GAAE,CAACA,KAGF,SAACZ,EAAA,EAAD,CAAKwB,GAAG,UAAR,UACE,SAAChB,EAAD,UACGX,EAAK4B,KAAI,YAA4C,IAAzC9B,EAAwC,EAAxCA,GAAI+B,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACnC,OACE,UAACnB,EAAD,YACE,SAACC,EAAD,CACEmB,IAAKH,EAAa,kCAAD,OAAoCA,GAAiBI,EACtEC,IAAKJ,EACLK,MAAM,SAER,SAACrB,EAAD,UAAOgB,KACP,SAAChB,EAAD,UAAOiB,MAPEjC,EAUd,OAIR,C","sources":["api-service.js","components/Box.jsx","components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import axios from 'axios';\n// const API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export async function fetchPopularMovies(page) {\n//   const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n//   const response = await axios(url);\n//   return response.data.results;\n// }\n\nconst API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  // page: 1,\n  \n};\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=<<api_key>>\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n\n// export const fetchPopularMovies = async (page) => {\n//   const { data } = await axios.get(`/trending/movie/week?page=${page}`);\n//   return data.results;\n// };\n\n\nexport const fetchPopularMovies = async (page) => {\n  const {data} = await axios.get(`/trending/movie/week?page=${page}`);\n  return data;\n};\nexport const fetchMovieToSearch = async (searchQuery, page) => {\n  const { data } = await axios.get(\n    `/search/movie?&query=${searchQuery}&page=${page}`\n  );\n  return data;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?`);\n  // console.log(data);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`);\n  // console.log(data.cast);\n  return data.cast;\n};\n\n// fetchCast(76600);\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`);\n  // console.log(data.results);\n  return data.results;\n};\n\n// fetchReviews(76600);","import styled from 'styled-components'\nimport { color, space, layout, border, flexbox, grid } from 'styled-system'\n\nconst Box = styled('div')(color, border, space, layout, flexbox, grid);\n\n\nexport default Box;","import styled from \"styled-components\";\n\n\nexport const List = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  display: grid;\n  padding: 60px 0;\n    grid-template-columns: repeat(6, 195px);\n    gap: 15px;\n`;\n\nexport const Item = styled.li`\njustify-self: center;\n`;\n\nexport const Image = styled.img`\n width: 195px;\n      height: 374px;\n      object-fit: cover;\n`;\n\nexport const Text = styled.p`\nfont-size: 16px;\n`","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from '../../api-service';\nimport Box from 'components/Box';\nimport { List, Item, Image, Text } from './Cast.styled';\nimport { toast } from 'react-toastify';\nimport defaultImg from '../image/defaultImg.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n\n  useEffect(() => {\n    const fetchCastMovie = async id => {\n      try {\n        const casts = await API.fetchCast(id);\n        if (casts.length === 0) {\n          toast(\"We don't found any cast\");\n        }\n        setCast(casts);\n      } catch (error) {\n        console.log('error');\n      }\n    };\n    fetchCastMovie(movieId);\n  }, [movieId]);\n\n  return (\n    <Box as=\"section\">\n      <List>\n        {cast.map(({ id, profile_path, name, character }) => {\n          return (\n            <Item key={id}>\n              <Image\n                src={profile_path? `https://image.tmdb.org/t/p/w500${profile_path}` : defaultImg}\n                alt={name}\n                width='195'\n              />\n              <Text>{name}</Text>\n              <Text>{character}</Text>\n            </Item>\n          );\n        })}\n      </List>\n    </Box>\n  );\n};\n\nexport default Cast;\n\n\n\n\n"],"names":["axios","api_key","language","fetchPopularMovies","page","data","fetchMovieToSearch","searchQuery","fetchMovieById","id","fetchCast","cast","fetchReviews","results","Box","styled","color","border","space","layout","flexbox","grid","List","Item","Image","Text","movieId","useParams","useState","setCast","useEffect","fetchCastMovie","API","casts","length","toast","console","log","as","map","profile_path","name","character","src","defaultImg","alt","width"],"sourceRoot":""}