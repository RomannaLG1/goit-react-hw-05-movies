{"version":3,"file":"static/js/845.cb249cf9.chunk.js","mappings":"wQAqDA,UA9Ca,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBN,GAAa,GAFG,SAGKO,EAAAA,KAHL,OAGVV,EAHU,OAIhBC,EAAUD,GACVG,GAAa,GALG,gDAOhBQ,QAAQC,IAAR,MACAP,EAAS,KAAMQ,SACfV,GAAa,GATG,yDAAH,qDAYjBM,GACD,GAAE,KAGD,4BACGL,GAASU,EAAAA,GAAAA,MAAY,+BACrBZ,IAAa,SAAC,IAAD,IACbF,IACC,SAAC,KAAD,UACGA,EAAOe,KAAI,gBAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,GAAvB,OACV,SAAC,KAAD,WACE,UAAC,KAAD,CAASC,GAAE,iBAAYD,GAAME,MAAO,CAAEC,KAAMf,GAA5C,UACG,KACD,SAAC,KAAD,CACEgB,IAAG,0CAAqCN,GACxCO,IAAKN,IACJ,KACH,wBAAKA,QAPEC,EADD,QAgBrB,C,qIChDYM,EAAOC,EAAAA,GAAAA,GAAH,8KASJC,EAAOD,EAAAA,GAAAA,GAAH,+CAIJE,EAAQF,EAAAA,GAAAA,IAAH,uF,kMCLlBG,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,QACVC,KAAM,GAID,IAAMC,EAAkB,mCAAG,sGACTJ,EAAAA,EAAAA,IAAA,yBADS,uBACxBK,EADwB,EACxBA,KADwB,kBAEzBA,EAAKC,SAFoB,2CAAH,qDAKlBC,EAAkB,mCAAG,WAAMC,GAAN,yFACTR,EAAAA,EAAAA,IAAA,+BACGQ,IAFM,uBACxBH,EADwB,EACxBA,KADwB,kBAIzBA,EAAKC,SAJoB,2CAAH,sDAOlBG,EAAc,mCAAG,WAAMnB,GAAN,yFACLU,EAAAA,EAAAA,IAAA,iBAAoBV,EAApB,MADK,uBACpBe,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,sDAMdK,EAAS,mCAAG,WAAMpB,GAAN,yFACAU,EAAAA,EAAAA,IAAA,iBAAoBV,EAApB,cADA,uBACfe,EADe,EACfA,KADe,kBAGhBA,EAAKM,MAHW,2CAAH,sDAOTC,EAAY,mCAAG,WAAMtB,GAAN,yFACHU,EAAAA,EAAAA,IAAA,iBAAoBV,EAApB,cADG,uBAClBe,EADkB,EAClBA,KADkB,kBAGnBA,EAAKC,SAHc,2CAAH,qD","sources":["Pages/Home.js","Pages/Home.styled.js","api-service.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport * as API from '../api-service';\nimport { Item, List, Image } from './Home.styled';\nimport { Loader } from '../components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await API.fetchPopularMovies();\n        setMovies(movies);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <main>\n      {error && toast.error('Something wrong...Try again')}\n      {isLoading && <Loader />}\n      {movies && (\n        <List>\n          {movies.map(({ poster_path, title, id }) => (\n            <Item key={id}>\n              <NavLink to={`movies/${id}`} state={{ from: location }}>\n                {' '}\n                <Image\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt={title}\n                />{' '}\n                <h3>{title}</h3>\n              </NavLink>\n            </Item>\n          ))}\n        </List>\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\n\nexport const List = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  display: grid;\n  padding: 60px 0;\n    grid-template-columns: repeat(3, 395px);\n    gap: 32px 16px;\n`;\n\nexport const Item = styled.li`\njustify-self: center;\n`;\n\nexport const Image = styled.img`\n width: 395px;\n      height: 574px;\n      object-fit: cover;\n`","import axios from 'axios';\n// const API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\n// const BASE_URL = 'https://api.themoviedb.org/3';\n\n// export async function fetchPopularMovies(page) {\n//   const url = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&language=en-US&page=${page}`;\n//   const response = await axios(url);\n//   return response.data.results;\n// }\n\nconst API_KEY = '7653694c4941db1f3bfb7af19c86b9a8';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n  page: 1,\n  \n};\n\nexport const fetchPopularMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/week?`);\n  return data.results;\n};\n\nexport const fetchMovieToSearch = async searchQuery => {\n  const { data } = await axios.get(\n    `/search/movie?&query=${searchQuery}`\n  );\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}?`);\n  // console.log(data);\n  return data;\n};\n\nexport const fetchCast = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`);\n  // console.log(data.cast);\n  return data.cast;\n};\n\n// fetchCast(76600);\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`);\n  // console.log(data.results);\n  return data.results;\n};\n\n// fetchReviews(76600);"],"names":["useState","movies","setMovies","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","fetchMovies","API","console","log","message","toast","map","poster_path","title","id","to","state","from","src","alt","List","styled","Item","Image","axios","api_key","language","page","fetchPopularMovies","data","results","fetchMovieToSearch","searchQuery","fetchMovieById","fetchCast","cast","fetchReviews"],"sourceRoot":""}